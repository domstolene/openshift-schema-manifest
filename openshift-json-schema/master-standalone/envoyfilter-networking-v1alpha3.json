{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "networking.istio.io/v1alpha3"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "EnvoyFilter"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "configPatches": {
          "description": "One or more patches with match conditions.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "applyTo": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "INVALID",
                  "LISTENER",
                  "FILTER_CHAIN",
                  "NETWORK_FILTER",
                  "HTTP_FILTER",
                  "ROUTE_CONFIGURATION",
                  "VIRTUAL_HOST",
                  "HTTP_ROUTE",
                  "CLUSTER",
                  "EXTENSION_CONFIG",
                  "BOOTSTRAP",
                  "LISTENER_FILTER"
                ]
              },
              "match": {
                "description": "Match on listener/route configuration/cluster.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "cluster": {
                    "description": "Match on envoy cluster attributes.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "The exact name of the cluster to match.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "portNumber": {
                        "description": "The service port for which this cluster was generated.",
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "service": {
                        "description": "The fully qualified service name for this cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "subset": {
                        "description": "The subset associated with the service.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "context": {
                    "description": "The specific config generation context to match on.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "ANY",
                      "SIDECAR_INBOUND",
                      "SIDECAR_OUTBOUND",
                      "GATEWAY"
                    ]
                  },
                  "listener": {
                    "description": "Match on envoy listener attributes.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "filterChain": {
                        "description": "Match a specific filter chain in a listener.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "applicationProtocols": {
                            "description": "Applies only to sidecars.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "destinationPort": {
                            "description": "The destination_port value used by a filter chain's match condition.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "The name of a specific filter to apply the patch to.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "name": {
                                "description": "The filter name to match on.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "subFilter": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The filter name to match on.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "description": "The name assigned to the filter chain.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "sni": {
                            "description": "The SNI value used by a filter chain's match condition.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "transportProtocol": {
                            "description": "Applies only to `SIDECAR_INBOUND` context.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "listenerFilter": {
                        "description": "Match a specific listener filter.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Match a specific listener by its name.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "portName": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "portNumber": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      }
                    }
                  },
                  "proxy": {
                    "description": "Match on properties associated with a proxy.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "metadata": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "proxyVersion": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "routeConfiguration": {
                    "description": "Match on envoy HTTP route configuration attributes.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "gateway": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Route configuration name to match on.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "portName": {
                        "description": "Applicable only for GATEWAY context.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "portNumber": {
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "vhost": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "route": {
                            "description": "Match a specific route within the virtual host.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "action": {
                                "description": "Match a route with specific action type.",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "enum": [
                                  "ANY",
                                  "ROUTE",
                                  "REDIRECT",
                                  "DIRECT_RESPONSE"
                                ]
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "patch": {
                "description": "The patch to apply along with the operation.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "filterClass": {
                    "description": "Determines the filter insertion order.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "UNSPECIFIED",
                      "AUTHN",
                      "AUTHZ",
                      "STATS"
                    ]
                  },
                  "operation": {
                    "description": "Determines how the patch should be applied.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "INVALID",
                      "MERGE",
                      "ADD",
                      "REMOVE",
                      "INSERT_BEFORE",
                      "INSERT_AFTER",
                      "INSERT_FIRST",
                      "REPLACE"
                    ]
                  },
                  "value": {
                    "description": "The JSON config of the object being patched.",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                }
              }
            }
          }
        },
        "priority": {
          "description": "Priority defines the order in which patch sets are applied within a context.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "workloadSelector": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "labels": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    },
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networking.istio.io",
      "kind": "EnvoyFilter",
      "version": "v1alpha3"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}