{
  "description": "SecuredCluster is the configuration template for the secured cluster services. These include Sensor, which is responsible for the connection to Central, and Collector, which performs host-level collection of process and network events.<p> **Important:** Please see the _Installation Prerequisites_ on the main RHACS operator page before deploying, or consult the RHACS documentation on creating cluster init bundles.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "platform.stackrox.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "SecuredCluster"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "SecuredClusterSpec defines the desired configuration state of a secured cluster.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "clusterName"
      ],
      "properties": {
        "admissionControl": {
          "description": "Settings for the Admission Control component, which is necessary for preventive policy enforcement, and for Kubernetes event monitoring.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "bypass": {
              "description": "Enables teams to bypass admission control in a monitored manner in the event of an emergency.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "BreakGlassAnnotation",
                "Disabled"
              ]
            },
            "contactImageScanners": {
              "description": "Should inline scanning be performed on previously unscanned images during a deployments admission review.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "ScanIfMissing",
                "DoNotScanInline"
              ]
            },
            "listenOnCreates": {
              "description": "Set this to 'true' to enable preventive policy enforcement for object creations.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "listenOnEvents": {
              "description": "Set this to 'true' to enable monitoring and enforcement for Kubernetes events (port-forward and exec).",
              "type": [
                "boolean",
                "null"
              ]
            },
            "listenOnUpdates": {
              "description": "Set this to 'true' to enable preventive policy enforcement for object updates. \n Note: this will not have any effect unless 'Listen On Creates' is set to 'true' as well.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "nodeSelector": {
              "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "replicas": {
              "description": "The number of replicas of the admission control pod.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 1
            },
            "resources": {
              "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "timeoutSeconds": {
              "description": "Maximum timeout period for admission review, upon which admission review will fail open. Use it to set request timeouts when you enable inline image scanning. The default kubectl timeout is 30 seconds; taking padding into account, this should not exceed 25 seconds.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "maximum": 25,
              "minimum": 1
            },
            "tolerations": {
              "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "auditLogs": {
          "description": "Settings relating to the ingestion of Kubernetes audit logs.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "collection": {
              "description": "Whether collection of Kubernetes audit logs should be enabled or disabled. Currently, this is only supported on OpenShift 4, and trying to enable it on non-OpenShift 4 clusters will result in an error. Use the 'Auto' setting to enable it on compatible environments, and disable it elsewhere.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "Auto",
                "Disabled",
                "Enabled"
              ]
            }
          }
        },
        "centralEndpoint": {
          "description": "The endpoint of the Red Hat Advanced Cluster Security Central instance to connect to, including the port number. If using a non-gRPC capable load balancer, use the WebSocket protocol by prefixing the endpoint address with wss://. Note: when leaving this blank, Sensor will attempt to connect to a Central instance running in the same namespace.",
          "type": [
            "string",
            "null"
          ]
        },
        "clusterLabels": {
          "description": "Custom labels associated with a secured cluster in Red Hat Advanced Cluster Security.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "clusterName": {
          "description": "The unique name of this cluster, as it will be shown in the Red Hat Advanced Cluster Security UI. Note: Once a name is set here, you will not be able to change it again. You will need to delete and re-create this object in order to register a cluster with a new name.",
          "type": "string"
        },
        "customize": {
          "description": "Customizations to apply on all Central Services components.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "annotations": {
              "description": "Custom annotations to set on all managed objects.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "envVars": {
              "description": "Custom environment variables to set on managed pods' containers.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  }
                }
              }
            },
            "labels": {
              "description": "Custom labels to set on all managed objects.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "imagePullSecrets": {
          "description": "Additional image pull secrets to be taken into account for pulling images.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "LocalSecretReference is a reference to a secret within the same namespace.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "The name of the referenced secret.",
                "type": "string"
              }
            }
          }
        },
        "misc": {
          "description": "Deprecated field. This field will be removed in a future release. Miscellaneous settings.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "createSCCs": {
              "description": "Deprecated field. This field will be removed in a future release. Set this to true to have the operator create SecurityContextConstraints (SCCs) for the operands. This isn't usually needed, and may interfere with other workloads.",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "monitoring": {
          "description": "Monitoring configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "openshift": {
              "description": "OpenShiftMonitoring defines settings related to OpenShift Monitoring",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "overlays": {
          "description": "Overlays",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "K8sObjectOverlay is an overlay that applies a set of patches to a resource. It targets a resource by its API version, kind, and name, and applies a list of patches to this resource. \n # Examples \n ## Adding an annotation to a resource \n apiVersion: v1 kind: ServiceAccount name: central patches: - path: metadata.annotations.eks\\.amazonaws\\.com/role-arn value: \"\\\"arn:aws:iam:1234:role\\\"\" \n ## Adding an environment variable to a deployment \n apiVersion: apps/v1 kind: Deployment name: central patches: - path: spec.template.spec.containers[name:central].env[-1] value: | name: MY_ENV_VAR value: value \n ## Adding an ingress to a network policy \n apiVersion: networking.k8s.io/v1 kind: NetworkPolicy name: allow-ext-to-central patches: - path: spec.ingress[-1] value: | ports: - port: 999 protocol: TCP \n ## Changing the value of a configMap \n apiVersion: v1 kind: ConfigMap name: central-endpoints patches: - path: data value: | endpoints.yaml: | disableDefault: false \n ## Adding a container to a deployment \n apiVersion: apps/v1 kind: Deployment name: central patches: - path: spec.template.spec.containers[-1] value: | name: nginx image: nginx ports: - containerPort: 8000 name: http protocol: TCP",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "Resource API version.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "description": "Resource kind.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "Name of resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "patches": {
                "description": "List of patches to apply to resource.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "K8sObjectOverlayPatch defines a patch to apply to a resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "path": {
                      "description": "Path of the form a.[key1:value1].b.[:value2] Where [key1:value1] is a selector for a key-value pair to identify a list element and [:value] is a value selector to identify a list element in a leaf list. All path intermediate nodes must exist.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "value": {
                      "description": "Value to add, delete or replace. For add, the path should be a new leaf. For delete, value should be unset. For replace, path should reference an existing node. All values are strings but are converted into appropriate type based on schema.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "perNode": {
          "description": "Settings for the components running on each node in the cluster (Collector and Compliance).",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "collector": {
              "description": "Settings for the Collector container, which is responsible for collecting process and networking activity at the host level.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "collection": {
                  "description": "The method for system-level data collection. CORE_BPF is recommended. If you select \"NoCollection\", you will not be able to see any information about network activity and process executions. The remaining settings in these section will not have any effect. The value is a subject of conversion by the operator if needed, e.g. to remove deprecated methods.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "EBPF",
                    "CORE_BPF",
                    "NoCollection",
                    "KernelModule"
                  ]
                },
                "forceCollection": {
                  "description": "When the \"collection\" field is set to the deprecated value \"EBPF\", then setting this to \"true\" prevents conversion of the collection method to \"CORE_BPF\". This could be used in exceptional situations when \"EBPF\" has to be used.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "imageFlavor": {
                  "description": "The image flavor to use for collector. \"Regular\" images are bigger in size, but contain probes for most kernels. If you use the \"Slim\" image flavor, you must ensure that your Central instance is connected to the internet, or regularly receives Collector Support Package updates (for further instructions, please refer to the documentation).",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "Regular",
                    "Slim"
                  ]
                },
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "compliance": {
              "description": "Settings for the Compliance container, which is responsible for checking host-level configurations.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "nodeInventory": {
              "description": "Settings for the Node-Inventory container, which is responsible for scanning the Nodes' filesystem.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "taintToleration": {
              "description": "To ensure comprehensive monitoring of your cluster activity, Red Hat Advanced Cluster Security will run services on every node in the cluster, including tainted nodes by default. If you do not want this behavior, please select 'AvoidTaints' here.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "TolerateTaints",
                "AvoidTaints"
              ]
            }
          }
        },
        "registryOverride": {
          "description": "Set this parameter to override the default registry in images. For example, nginx:latest -> <registry override>/library/nginx:latest",
          "type": [
            "string",
            "null"
          ]
        },
        "scanner": {
          "description": "Settings for the Scanner component, which is responsible for vulnerability scanning of container images stored in a cluster-local image repository.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "analyzer": {
              "description": "Settings pertaining to the analyzer deployment, such as for autoscaling.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "nodeSelector": {
                  "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "scaling": {
                  "description": "Controls the number of analyzer replicas and autoscaling.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "autoScaling": {
                      "description": "When enabled, the number of component replicas is managed dynamically based on the load, within the limits specified below.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "maxReplicas": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    },
                    "minReplicas": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    },
                    "replicas": {
                      "description": "When autoscaling is disabled, the number of replicas will always be configured to match this value.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    }
                  }
                },
                "tolerations": {
                  "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "db": {
              "description": "Settings pertaining to the database used by the Red Hat Advanced Cluster Security Scanner.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "nodeSelector": {
                  "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "tolerations": {
                  "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "scannerComponent": {
              "description": "If you do not want to deploy the Red Hat Advanced Cluster Security Scanner, you can disable it here (not recommended). If you do so, all the settings in this section will have no effect.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "AutoSense",
                "Disabled"
              ]
            }
          }
        },
        "scannerV4": {
          "description": "Settings for the Scanner V4 components, which can run in addition to the previously existing Scanner components",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "db": {
              "description": "Settings pertaining to the DB deployment.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "nodeSelector": {
                  "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "persistence": {
                  "description": "Configures how Scanner V4 should store its persistent data. You can use a persistent volume claim (the recommended default), a host path, or an emptyDir volume if Scanner V4 is running on a secured cluster without default StorageClass.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "hostPath": {
                      "description": "Stores persistent data on a directory on the host. This is not recommended, and should only be used together with a node selector (only available in YAML view).",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "path": {
                          "description": "The path on the host running Central.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "persistentVolumeClaim": {
                      "description": "Uses a Kubernetes persistent volume claim (PVC) to manage the storage location of persistent data. Recommended for most users.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "claimName": {
                          "description": "The name of the PVC to manage persistent data. If no PVC with the given name exists, it will be created. Defaults to \"scanner-v4-db\" if not set.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "size": {
                          "description": "The size of the persistent volume when created through the claim. If a claim was automatically created, this can be used after the initial deployment to resize (grow) the volume (only supported by some storage class controllers).",
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                        },
                        "storageClassName": {
                          "description": "The name of the storage class to use for the PVC. If your cluster is not configured with a default storage class, you must select a value here.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "tolerations": {
                  "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "indexer": {
              "description": "Settings pertaining to the indexer deployment.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "nodeSelector": {
                  "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "resources": {
                  "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "scaling": {
                  "description": "Controls the number of replicas and autoscaling for this component.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "autoScaling": {
                      "description": "When enabled, the number of component replicas is managed dynamically based on the load, within the limits specified below.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "maxReplicas": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    },
                    "minReplicas": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    },
                    "replicas": {
                      "description": "When autoscaling is disabled, the number of replicas will always be configured to match this value.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "minimum": 1
                    }
                  }
                },
                "tolerations": {
                  "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "monitoring": {
              "description": "Configures monitoring endpoint for Scanner V4. The monitoring endpoint allows other services to collect metrics from Scanner V4, provided in Prometheus compatible format.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "exposeEndpoint": {
                  "description": "Expose the monitoring endpoint. A new service, \"monitoring\", with port 9090, will be created as well as a network policy allowing inbound connections to the port.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ]
                }
              }
            },
            "scannerComponent": {
              "description": "If you want to enable the Scanner V4 component set this to \"AutoSense\"",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "Default",
                "AutoSense",
                "Disabled"
              ]
            }
          }
        },
        "sensor": {
          "description": "Settings for the Sensor component.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "nodeSelector": {
              "description": "If you want this component to only run on specific nodes, you can configure a node selector here.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "resources": {
              "description": "Allows overriding the default resource settings for this component. Please consult the documentation for an overview of default resource requirements and a sizing guide.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            },
            "tolerations": {
              "description": "If you want this component to only run on specific nodes, you can configure tolerations of tainted nodes.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "tls": {
          "description": "Allows you to specify additional trusted Root CAs.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "additionalCAs": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AdditionalCA defines a certificate for an additional Certificate Authority.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "content",
                  "name"
                ],
                "properties": {
                  "content": {
                    "description": "PEM format",
                    "type": "string"
                  },
                  "name": {
                    "description": "Must be a valid file basename",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "SecuredClusterStatus defines the observed state of SecuredCluster",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "conditions"
      ],
      "properties": {
        "clusterName": {
          "description": "The assigned cluster name per the spec. This cannot be changed afterwards. If you need to change the cluster name, please delete and recreate this resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "description": "StackRoxCondition defines a condition for a StackRox custom resource.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "ConditionReason is a type of values of condition reason.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "ConditionStatus is a type of values of condition status.",
                "type": "string"
              },
              "type": {
                "description": "ConditionType is a type of values of condition type.",
                "type": "string"
              }
            }
          }
        },
        "deployedRelease": {
          "description": "StackRoxRelease describes the Helm \"release\" that was most recently applied.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "version": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "productVersion": {
          "description": "The deployed version of the product.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "platform.stackrox.io",
      "kind": "SecuredCluster",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}