{
  "description": "CrunchyBridgeCluster is the Schema for the crunchybridgeclusters API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "postgres-operator.crunchydata.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "CrunchyBridgeCluster"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "CrunchyBridgeClusterSpec defines the desired state of CrunchyBridgeCluster to be managed by Crunchy Data Bridge",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "clusterName",
        "isHa",
        "majorVersion",
        "plan",
        "provider",
        "region",
        "storage"
      ],
      "properties": {
        "clusterName": {
          "description": "The name of the cluster --- According to Bridge API/GUI errors, \"Field name should be between 5 and 50 characters in length, containing only unicode characters, unicode numbers, hyphens, spaces, or underscores, and starting with a character\", and ending with a character or number.",
          "type": "string",
          "maxLength": 50,
          "minLength": 5,
          "pattern": "^[A-Za-z][A-Za-z0-9\\-_ ]*[A-Za-z0-9]$"
        },
        "isHa": {
          "description": "Whether the cluster is high availability, meaning that it has a secondary it can fail over to quickly in case the primary becomes unavailable.",
          "type": "boolean"
        },
        "isProtected": {
          "description": "Whether the cluster is protected. Protected clusters can't be destroyed until their protected flag is removed",
          "type": [
            "boolean",
            "null"
          ]
        },
        "majorVersion": {
          "description": "The ID of the cluster's major Postgres version. Currently Bridge offers 13-16",
          "type": "integer",
          "maximum": 16,
          "minimum": 13
        },
        "metadata": {
          "description": "Metadata contains metadata for custom resources",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "annotations": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "labels": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "plan": {
          "description": "The ID of the cluster's plan. Determines instance, CPU, and memory.",
          "type": "string"
        },
        "provider": {
          "description": "The cloud provider where the cluster is located. Currently Bridge offers aws, azure, and gcp only",
          "type": "string",
          "enum": [
            "aws",
            "azure",
            "gcp"
          ],
          "x-kubernetes-validations": [
            {
              "message": "immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "region": {
          "description": "The provider region where the cluster is located.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "roles": {
          "description": "Roles for which to create Secrets that contain their credentials which are retrieved from the Bridge API. An empty list creates no role secrets. Removing a role from this list does NOT drop the role nor revoke their access, but it will delete that role's secret from the kube cluster.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "secretName"
            ],
            "properties": {
              "name": {
                "description": "Name of the role within Crunchy Bridge. More info: https://docs.crunchybridge.com/concepts/users",
                "type": "string"
              },
              "secretName": {
                "description": "The name of the Secret that will hold the role credentials.",
                "type": "string",
                "maxLength": 253,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "secret": {
          "description": "The name of the secret containing the API key and team id",
          "type": [
            "string",
            "null"
          ]
        },
        "storage": {
          "description": "The amount of storage available to the cluster in gigabytes. The amount must be an integer, followed by Gi (gibibytes) or G (gigabytes) to match Kubernetes conventions. If the amount is given in Gi, we round to the nearest G value. The minimum value allowed by Bridge is 10 GB. The maximum value allowed by Bridge is 65535 GB.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "x-kubernetes-int-or-string": true
        }
      }
    },
    "status": {
      "description": "CrunchyBridgeClusterStatus defines the observed state of CrunchyBridgeCluster",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "conditions represent the observations of postgres cluster's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "host": {
          "description": "The Hostname of the postgres cluster in Bridge, provided by Bridge API and null until then.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "description": "The ID of the postgres cluster in Bridge, provided by Bridge API and null until then.",
          "type": [
            "string",
            "null"
          ]
        },
        "isHa": {
          "description": "Whether the cluster is high availability, meaning that it has a secondary it can fail over to quickly in case the primary becomes unavailable.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "isProtected": {
          "description": "Whether the cluster is protected. Protected clusters can't be destroyed until their protected flag is removed",
          "type": [
            "boolean",
            "null"
          ]
        },
        "majorVersion": {
          "description": "The cluster's major Postgres version.",
          "type": [
            "integer",
            "null"
          ]
        },
        "name": {
          "description": "The name of the cluster in Bridge.",
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "description": "observedGeneration represents the .metadata.generation on which the status was based.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64",
          "minimum": 0
        },
        "ongoingUpgrade": {
          "description": "The cluster upgrade as represented by Bridge",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "flavor",
              "starting_from",
              "state"
            ],
            "properties": {
              "flavor": {
                "type": "string"
              },
              "starting_from": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          }
        },
        "plan": {
          "description": "The ID of the cluster's plan. Determines instance, CPU, and memory.",
          "type": [
            "string",
            "null"
          ]
        },
        "responses": {
          "description": "Most recent, raw responses from Bridge API",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "state": {
          "description": "State of cluster in Bridge.",
          "type": [
            "string",
            "null"
          ]
        },
        "storage": {
          "description": "The amount of storage available to the cluster.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "x-kubernetes-int-or-string": true
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "postgres-operator.crunchydata.com",
      "kind": "CrunchyBridgeCluster",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}