{
  "description": "OpensearchIndexTemplate is the schema for the OpenSearch index templates API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "opensearch.opster.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "OpensearchIndexTemplate"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "indexPatterns",
        "opensearchCluster"
      ],
      "properties": {
        "_meta": {
          "description": "Optional user metadata about the index template",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "composedOf": {
          "description": "An ordered list of component template names. Component templates are merged in the order specified,\nmeaning that the last component template specified has the highest precedence",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "dataStream": {
          "description": "The dataStream config that should be applied",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "timestamp_field": {
              "description": "TimestampField for dataStream",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the field that are used for the DataStream",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "indexPatterns": {
          "description": "Array of wildcard expressions used to match the names of indices during creation",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "name": {
          "description": "The name of the index template. Defaults to metadata.name",
          "type": [
            "string",
            "null"
          ]
        },
        "opensearchCluster": {
          "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "priority": {
          "description": "Priority to determine index template precedence when a new data stream or index is created.\nThe index template with the highest priority is chosen",
          "type": [
            "integer",
            "null"
          ]
        },
        "template": {
          "description": "The template that should be applied",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "aliases": {
              "description": "Aliases to add",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "description": "Describes the specs of an index alias",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "alias": {
                    "description": "The name of the alias.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "filter": {
                    "description": "Query used to limit documents the alias can access.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "index": {
                    "description": "The name of the index that the alias points to.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "isWriteIndex": {
                    "description": "If true, the index is the write index for the alias",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "routing": {
                    "description": "Value used to route indexing and search operations to a specific shard.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "mappings": {
              "description": "Mapping for fields in the index",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "settings": {
              "description": "Configuration options for the index",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalProperties": false
        },
        "version": {
          "description": "Version number used to manage the component template externally",
          "type": [
            "integer",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "existingIndexTemplate": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "indexTemplateName": {
          "description": "Name of the currently managed index template",
          "type": [
            "string",
            "null"
          ]
        },
        "managedCluster": {
          "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
          "type": [
            "string",
            "null"
          ]
        },
        "reason": {
          "type": [
            "string",
            "null"
          ]
        },
        "state": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "opensearch.opster.io",
      "kind": "OpensearchIndexTemplate",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}