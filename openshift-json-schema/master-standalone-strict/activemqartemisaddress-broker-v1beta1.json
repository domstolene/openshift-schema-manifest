{
  "description": "ActiveMQArtemisAddress is the Schema for the activemqartemisaddresses API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "broker.amq.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ActiveMQArtemisAddress"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ActiveMQArtemisAddressSpec defines the desired state of ActiveMQArtemisAddress",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "addressName": {
          "description": "Address Name",
          "type": [
            "string",
            "null"
          ]
        },
        "applyToCrNames": {
          "description": "Apply to the broker crs in the current namespace. A value of * or empty string means applying to all broker crs. Default apply to all broker crs",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "password": {
          "description": "The user's password",
          "type": [
            "string",
            "null"
          ]
        },
        "queueConfiguration": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "autoCreateAddress": {
              "description": "Whether auto create address",
              "type": [
                "boolean",
                "null"
              ]
            },
            "autoDelete": {
              "description": "Auto-delete the queue",
              "type": [
                "boolean",
                "null"
              ]
            },
            "autoDeleteDelay": {
              "description": "Delay (Milliseconds) before auto-delete the queue",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "autoDeleteMessageCount": {
              "description": "Message count of the queue to allow auto delete",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "configurationManaged": {
              "description": " If the queue is configuration managed",
              "type": [
                "boolean",
                "null"
              ]
            },
            "consumerPriority": {
              "description": "Consumer Priority",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "consumersBeforeDispatch": {
              "description": "Number of consumers required before dispatching messages",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "delayBeforeDispatch": {
              "description": "Milliseconds to wait for `consumers-before-dispatch` to be met before dispatching messages anyway",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "durable": {
              "description": "If the queue is durable or not",
              "type": [
                "boolean",
                "null"
              ]
            },
            "enabled": {
              "description": "If the queue is enabled",
              "type": [
                "boolean",
                "null"
              ]
            },
            "exclusive": {
              "description": "If the queue is exclusive",
              "type": [
                "boolean",
                "null"
              ]
            },
            "filterString": {
              "description": "The filter string for the queue",
              "type": [
                "string",
                "null"
              ]
            },
            "groupBuckets": {
              "description": "Number of messaging group buckets",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "groupFirstKey": {
              "description": "Header set on the first group message",
              "type": [
                "string",
                "null"
              ]
            },
            "groupRebalance": {
              "description": "If rebalance the message group",
              "type": [
                "boolean",
                "null"
              ]
            },
            "groupRebalancePauseDispatch": {
              "description": "If pause message dispatch when rebalancing groups",
              "type": [
                "boolean",
                "null"
              ]
            },
            "ignoreIfExists": {
              "description": "If ignore if the target queue already exists",
              "type": [
                "boolean",
                "null"
              ]
            },
            "lastValue": {
              "description": "If it is a last value queue",
              "type": [
                "boolean",
                "null"
              ]
            },
            "lastValueKey": {
              "description": "The property used for last value queue to identify last values",
              "type": [
                "string",
                "null"
              ]
            },
            "maxConsumers": {
              "description": "Max number of consumers allowed on this queue",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "nonDestructive": {
              "description": "If force non-destructive consumers on the queue",
              "type": [
                "boolean",
                "null"
              ]
            },
            "purgeOnNoConsumers": {
              "description": "Whether to delete all messages when no consumers connected to the queue",
              "type": [
                "boolean",
                "null"
              ]
            },
            "ringSize": {
              "description": "The size the queue should maintain according to ring semantics",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "routingType": {
              "description": "The routing type of the queue",
              "type": [
                "string",
                "null"
              ]
            },
            "temporary": {
              "description": "If the queue is temporary",
              "type": [
                "boolean",
                "null"
              ]
            },
            "user": {
              "description": "The user associated with the queue",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "queueName": {
          "description": "Queue Name",
          "type": [
            "string",
            "null"
          ]
        },
        "removeFromBrokerOnDelete": {
          "description": "Whether or not delete the queue from broker when CR is undeployed(default false)",
          "type": [
            "boolean",
            "null"
          ]
        },
        "routingType": {
          "description": "The Routing Type",
          "type": [
            "string",
            "null"
          ]
        },
        "user": {
          "description": "User name for creating the queue or address",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ActiveMQArtemisAddressStatus defines the observed state of ActiveMQArtemisAddress",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "broker.amq.io",
      "kind": "ActiveMQArtemisAddress",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}