{
  "description": "EgressQoS is a CRD that allows the user to define a DSCP value for pods egress traffic on its namespace to specified CIDRs. Traffic from these pods will be checked against each EgressQoSRule in the namespace's EgressQoS, and if there is a match the traffic is marked with the relevant DSCP value.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "k8s.ovn.org/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "EgressQoS"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "EgressQoSSpec defines the desired state of EgressQoS",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "egress"
      ],
      "properties": {
        "egress": {
          "description": "a collection of Egress QoS rule objects",
          "type": "array",
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "dscp"
            ],
            "properties": {
              "dscp": {
                "description": "DSCP marking value for matching pods' traffic.",
                "type": "integer",
                "maximum": 63,
                "minimum": 0
              },
              "dstCIDR": {
                "description": "DstCIDR specifies the destination's CIDR. Only traffic heading to this CIDR will be marked with the DSCP value. This field is optional, and in case it is not set the rule is applied to all egress traffic regardless of the destination.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "cidr"
              },
              "podSelector": {
                "description": "PodSelector applies the QoS rule only to the pods in the namespace whose label matches this definition. This field is optional, and in case it is not set results in the rule being applied to all pods in the namespace.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "EgressQoSStatus defines the observed state of EgressQoS",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "k8s.ovn.org",
      "kind": "EgressQoS",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}