{
  "description": "GroupSync is the Schema for the groupsyncs API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "redhatcop.redhat.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "GroupSync"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "GroupSyncSpec defines the desired state of GroupSync",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "providers": {
          "description": "List of Providers that can be mounted by containers belonging to the pod.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Provider represents the container for a single provider",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "azure": {
                "description": "Azure represents the Azure provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "credentialsSecret"
                ],
                "properties": {
                  "authorityHost": {
                    "description": "AuthorityHost is the location of the Azure Active Directory endpoint",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "baseGroups": {
                    "description": "BaseGroups allows for a set of groups to be specified to start searching from instead of searching all groups in the directory",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "ca": {
                    "description": "Ca is a reference to a Secret or ConfigMap containing a CA certificate to communicate to Azure",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caSecret": {
                    "description": "CaSecret is a reference to a secret containing a CA certificate to communicate to Azure Deprecated: Use Ca instead.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "filter": {
                    "description": "Filter allows for limiting the results from the groups response using the Filter feature of the Azure Graph API",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "groups": {
                    "description": "Groups represents a filtered list of groups to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "insecure": {
                    "description": "Insecure specifies whether to allow for unverified certificates to be used when communicating to Azure",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in Azure. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "userNameAttributes": {
                    "description": "UserNameAttributes are the fields to consider on the User object containing the username",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              },
              "github": {
                "description": "GitHub represents the GitHub provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "credentialsSecret"
                ],
                "properties": {
                  "ca": {
                    "description": "Ca is a reference to a Secret or ConfigMap containing a CA certificate to communicate to the GitHub server",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caSecret": {
                    "description": "CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server Deprecated: Use Ca instead.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for the GitHub server",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "insecure": {
                    "description": "Insecure specifies whether to allow for unverified certificates to be used when communicating to GitHab",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "mapByScimId": {
                    "description": "Map users by SCIM Id. This will usually match your IDP id, like UPN when using AAD.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "organization": {
                    "description": "Organization represents the location to source teams to synchronize",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in GitHub. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "teams": {
                    "description": "Teams represents a filtered list of teams to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "url": {
                    "description": "URL is the location of the GitHub server",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "v4url": {
                    "description": "V4URL is the location of the GitHub server graphql endpoint.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "gitlab": {
                "description": "GitLab represents the GitLab provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "credentialsSecret"
                ],
                "properties": {
                  "ca": {
                    "description": "Ca is a reference to a Secret or ConfigMap containing a CA certificate to communicate to the GitLab server",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caSecret": {
                    "description": "CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server Deprecated: Use Ca instead.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for the GitLab server",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "groups": {
                    "description": "Groups represents a filtered list of groups to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "insecure": {
                    "description": "Insecure specifies whether to allow for unverified certificates to be used when communicating to GitLab",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in GitLab. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "scope": {
                    "description": "Scope represents the depth for which groups will be synchronized",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "one",
                      "sub"
                    ]
                  },
                  "url": {
                    "description": "URL is the location of the GitLab server",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "keycloak": {
                "description": "Keycloak represents the Keycloak provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "credentialsSecret",
                  "realm",
                  "url"
                ],
                "properties": {
                  "ca": {
                    "description": "Ca is a reference to a Secret or ConfigMap containing a CA certificate to communicate to the Keycloak server",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caSecret": {
                    "description": "CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server Deprecated: Use Ca instead.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "groups": {
                    "description": "Groups represents a filtered list of groups to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "insecure": {
                    "description": "Insecure specifies whether to allow for unverified certificates to be used when communicating to Keycloak",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "loginRealm": {
                    "description": "LoginRealm is the Keycloak realm to authenticate against",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in Keycloak. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "realm": {
                    "description": "Realm is the realm containing the groups to synchronize against",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Scope represents the depth for which groups will be synchronized",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "one",
                      "sub"
                    ]
                  },
                  "url": {
                    "description": "URL is the location of the Keycloak server",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "ldap": {
                "description": "Ldap represents the LDAP provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "url"
                ],
                "properties": {
                  "activeDirectory": {
                    "description": "ActiveDirectoryConfig represents the configuration for Active Directory",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "groupMembershipAttributes",
                      "userNameAttributes",
                      "usersQuery"
                    ],
                    "properties": {
                      "groupMembershipAttributes": {
                        "description": "GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "userNameAttributes": {
                        "description": "UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "usersQuery": {
                        "description": "AllUsersQuery holds the template for an LDAP query that returns user entries.",
                        "type": "object",
                        "required": [
                          "baseDN"
                        ],
                        "properties": {
                          "baseDN": {
                            "description": "The DN of the branch of the directory where all searches should start from",
                            "type": "string"
                          },
                          "derefAliases": {
                            "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "pageSize": {
                            "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "scope": {
                            "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "timeout": {
                            "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "augmentedActiveDirectory": {
                    "description": "ActiveDirectoryConfig represents the configuration for Augmented Active Directory",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "groupMembershipAttributes",
                      "groupNameAttributes",
                      "groupUIDAttribute",
                      "groupsQuery",
                      "userNameAttributes",
                      "usersQuery"
                    ],
                    "properties": {
                      "groupMembershipAttributes": {
                        "description": "GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "groupNameAttributes": {
                        "description": "GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "groupUIDAttribute": {
                        "description": "GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)",
                        "type": "string"
                      },
                      "groupsQuery": {
                        "description": "AllGroupsQuery holds the template for an LDAP query that returns group entries.",
                        "type": "object",
                        "required": [
                          "baseDN"
                        ],
                        "properties": {
                          "baseDN": {
                            "description": "The DN of the branch of the directory where all searches should start from",
                            "type": "string"
                          },
                          "derefAliases": {
                            "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "pageSize": {
                            "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "scope": {
                            "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "timeout": {
                            "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "userNameAttributes": {
                        "description": "UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "usersQuery": {
                        "description": "AllUsersQuery holds the template for an LDAP query that returns user entries.",
                        "type": "object",
                        "required": [
                          "baseDN"
                        ],
                        "properties": {
                          "baseDN": {
                            "description": "The DN of the branch of the directory where all searches should start from",
                            "type": "string"
                          },
                          "derefAliases": {
                            "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "pageSize": {
                            "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "scope": {
                            "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "timeout": {
                            "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "blacklist": {
                    "description": "Blacklist represents a list of groups to not synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "ca": {
                    "description": "Ca is a reference to a Secret or ConfigMap containing a CA certificate to communicate to LDAP",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caSecret": {
                    "description": "CaSecret is a reference to a secret containing a CA certificate to communicate to LDAP Deprecated: Use Ca instead.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "groupUIDNameMapping": {
                    "description": "/ LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "insecure": {
                    "description": "Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in LDAP. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "rfc2307": {
                    "description": "RFC2307Config represents the configuration for a RFC2307 schema",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "groupMembershipAttributes",
                      "groupNameAttributes",
                      "groupUIDAttribute",
                      "groupsQuery",
                      "userNameAttributes",
                      "userUIDAttribute",
                      "usersQuery"
                    ],
                    "properties": {
                      "groupMembershipAttributes": {
                        "description": "GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "groupNameAttributes": {
                        "description": "GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "groupUIDAttribute": {
                        "description": "GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)",
                        "type": "string"
                      },
                      "groupsQuery": {
                        "description": "AllGroupsQuery holds the template for an LDAP query that returns group entries.",
                        "type": "object",
                        "required": [
                          "baseDN"
                        ],
                        "properties": {
                          "baseDN": {
                            "description": "The DN of the branch of the directory where all searches should start from",
                            "type": "string"
                          },
                          "derefAliases": {
                            "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "pageSize": {
                            "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "scope": {
                            "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "timeout": {
                            "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "tolerateMemberNotFoundErrors": {
                        "description": "TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "tolerateMemberOutOfScopeErrors": {
                        "description": "TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "userNameAttributes": {
                        "description": "UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "userUIDAttribute": {
                        "description": "UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes",
                        "type": "string"
                      },
                      "usersQuery": {
                        "description": "AllUsersQuery holds the template for an LDAP query that returns user entries.",
                        "type": "object",
                        "required": [
                          "baseDN"
                        ],
                        "properties": {
                          "baseDN": {
                            "description": "The DN of the branch of the directory where all searches should start from",
                            "type": "string"
                          },
                          "derefAliases": {
                            "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "filter": {
                            "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "pageSize": {
                            "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "scope": {
                            "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "timeout": {
                            "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
                            "type": [
                              "integer",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "url": {
                    "description": "URL is the location of the LDAP Server",
                    "type": "string"
                  },
                  "whitelist": {
                    "description": "Whitelist represents a list of groups to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name represents the name of the provider",
                "type": "string"
              },
              "okta": {
                "description": "Okta represents the Okta provider",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "appId",
                  "credentialsSecret",
                  "url"
                ],
                "properties": {
                  "appId": {
                    "description": "AppId is the id of the application we are syncing groups for",
                    "type": "string"
                  },
                  "credentialsSecret": {
                    "description": "CredentialsSecret is a reference to a secret containing authentication details for the Okta server",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key represents the specific key to reference from the resource",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "kind": {
                        "description": "Kind is a string value representing the resource type",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ]
                      },
                      "name": {
                        "description": "Name represents the name of the resource",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace represents the namespace containing the resource",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "extractLoginUsername": {
                    "description": "ExtractLoginUsername is true if Okta username's are defaulted to emails and you would like the username only",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "groupLimit": {
                    "description": "GroupLimit is the maximum number of groups that are requested from OKTA per request.  Multiple requests will be made using pagination if you have more groups than this limit. Default is \"1000\"",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "groups": {
                    "description": "Groups represents a filtered list of groups to synchronize",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "profileKey": {
                    "description": "ProfileKey the attribute from Okta you would like to use as the user identifier.  Default is \"login\"",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "prune": {
                    "description": "Prune Whether to prune groups that are no longer in OKTA. Default is false",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "url": {
                    "description": "URL is the location of the Okta domain server",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "schedule": {
          "description": "Schedule represents a cron based configuration for synchronization",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "GroupSyncStatus defines the observed state of GroupSync",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "lastSyncSuccessTime": {
          "description": "LastSyncSuccessTime represents the time last synchronization completed successfully",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "redhatcop.redhat.io",
      "kind": "GroupSync",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}