{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "kafka.strimzi.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "KafkaUser"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "The specification of the user.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "authentication": {
          "description": "Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. \n\n* `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.\n* `tls` generates a secret with user certificate for mutual TLS authentication.\n* `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.\n  ACLs and quotas set for this user are configured in the `CN=<username>` format.\n\nAuthentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "type"
          ],
          "properties": {
            "password": {
              "description": "Specify the password for the user. If not set, a new password is generated by the User Operator.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "valueFrom"
              ],
              "properties": {
                "valueFrom": {
                  "description": "Secret from which the password should be read.",
                  "type": "object",
                  "properties": {
                    "secretKeyRef": {
                      "description": "Selects a key of a Secret in the resource's namespace.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "optional": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Authentication type.",
              "type": "string",
              "enum": [
                "tls",
                "tls-external",
                "scram-sha-512"
              ]
            }
          },
          "additionalProperties": false
        },
        "authorization": {
          "description": "Authorization rules for this Kafka user.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "acls",
            "type"
          ],
          "properties": {
            "acls": {
              "description": "List of ACL rules which should be applied to this user.",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "resource"
                ],
                "properties": {
                  "host": {
                    "description": "The host from which the action described in the ACL rule is allowed or denied.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "operation": {
                    "description": "Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "Read",
                      "Write",
                      "Create",
                      "Delete",
                      "Alter",
                      "Describe",
                      "ClusterAction",
                      "AlterConfigs",
                      "DescribeConfigs",
                      "IdempotentWrite",
                      "All"
                    ]
                  },
                  "operations": {
                    "description": "List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Read",
                        "Write",
                        "Create",
                        "Delete",
                        "Alter",
                        "Describe",
                        "ClusterAction",
                        "AlterConfigs",
                        "DescribeConfigs",
                        "IdempotentWrite",
                        "All"
                      ]
                    }
                  },
                  "resource": {
                    "description": "Indicates the resource for which given ACL rule applies.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "patternType": {
                        "description": "Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "literal",
                          "prefix"
                        ]
                      },
                      "type": {
                        "description": "Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.",
                        "type": "string",
                        "enum": [
                          "topic",
                          "group",
                          "cluster",
                          "transactionalId"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "allow",
                      "deny"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "type": {
              "description": "Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.",
              "type": "string",
              "enum": [
                "simple"
              ]
            }
          },
          "additionalProperties": false
        },
        "quotas": {
          "description": "Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "consumerByteRate": {
              "description": "A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "controllerMutationRate": {
              "description": "A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.",
              "type": [
                "number",
                "null"
              ],
              "minimum": 0
            },
            "producerByteRate": {
              "description": "A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            },
            "requestPercentage": {
              "description": "A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.",
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "template": {
          "description": "Template to specify how Kafka User `Secrets` are generated.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "secret": {
              "description": "Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The status of the Kafka User.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "List of status conditions.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition (a single word in CamelCase).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "The status of the condition, either True, False or Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "The generation of the CRD that was last reconciled by the operator.",
          "type": [
            "integer",
            "null"
          ]
        },
        "secret": {
          "description": "The name of `Secret` where the credentials are stored.",
          "type": [
            "string",
            "null"
          ]
        },
        "username": {
          "description": "Username.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kafka.strimzi.io",
      "kind": "KafkaUser",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}